{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "Compro API Collection",
		"description": "Complete API collection for Compro Backend - All endpoints included",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"user@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login user and get access token. Automatically saves tokens to environment variables."
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data) {",
									"        pm.environment.set('accessToken', response.data.accessToken);",
									"        pm.environment.set('refreshToken', response.data.refreshToken);",
									"        if (response.data.user) {",
									"            pm.environment.set('userId', response.data.user.id.toString());",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user. After logout, the access token will be blacklisted and cannot be used anymore."
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    // Clear tokens from environment after successful logout",
									"    pm.environment.unset('accessToken');",
									"    pm.environment.unset('refreshToken');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Get Current User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user info"
					}
				},
				{
					"name": "Refresh Token",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh access token using refresh token. Returns new access token and refresh token."
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    if (response.success && response.data) {",
									"        pm.environment.set('accessToken', response.data.accessToken);",
									"        if (response.data.refreshToken) {",
									"            pm.environment.set('refreshToken', response.data.refreshToken);",
									"        }",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					]
				},
				{
					"name": "Test Access After Logout (Should Fail)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{loggedOutToken}}",
								"description": "Use a token that was used for logout - should fail"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Test that accessing protected endpoint with a logged-out token fails with 401. Set {{loggedOutToken}} to a token that was used for logout."
					},
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Should fail with 401 for logged out token', function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test('Should have appropriate error message', function () {",
									"    const response = pm.response.json();",
									"    pm.expect(response.success).to.be.false;",
									"    pm.expect(response.message).to.include('logout');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					]
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Get all users (public access with role-based filtering)"
					}
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get specific user by ID"
					}
				},
				{
					"name": "Create User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"password123\",\n  \"role\": \"anggota\",\n  \"departmentId\": 1,\n  \"divisionId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							]
						},
						"description": "Create new user (requires ketua_divisi role or higher)"
					}
				},
				{
					"name": "Update User",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"John Doe Updated\",\n  \"email\": \"john.updated@example.com\",\n  \"role\": \"ketua_divisi\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Update user (requires ketua_divisi role or higher)"
					}
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Delete user (requires ketua_divisi role or higher)"
					}
				}
			]
		},
		{
			"name": "Departments",
			"item": [
				{
					"name": "Get All Departments",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"departments"
							]
						},
						"description": "Get all departments (public access)"
					}
				},
				{
					"name": "Get Department by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/departments/{{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"departments",
								"{{departmentId}}"
							]
						},
						"description": "Get specific department by ID"
					}
				},
				{
					"name": "Create Department",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"IT Department\",\n  \"description\": \"Information Technology Department\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"departments"
							]
						},
						"description": "Create new department (requires ketua_departemen role or higher)"
					}
				},
				{
					"name": "Update Department",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Information Technology\",\n  \"description\": \"Updated IT Department description\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/departments/{{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"departments",
								"{{departmentId}}"
							]
						},
						"description": "Update department (requires ketua_departemen role or higher)"
					}
				},
				{
					"name": "Delete Department",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/departments/{{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"departments",
								"{{departmentId}}"
							]
						},
						"description": "Delete department (requires ketua_departemen role or higher)"
					}
				}
			]
		},
		{
			"name": "Divisions",
			"item": [
				{
					"name": "Get All Divisions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/divisions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"divisions"
							]
						},
						"description": "Get all divisions (public access)"
					}
				},
				{
					"name": "Get Division by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/divisions/{{divisionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"divisions",
								"{{divisionId}}"
							]
						},
						"description": "Get specific division by ID"
					}
				},
				{
					"name": "Create Division",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Frontend Division\",\n  \"description\": \"Frontend Development Division\",\n  \"departmentId\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/divisions",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"divisions"
							]
						},
						"description": "Create new division (requires ketua_departemen role or higher)"
					}
				},
				{
					"name": "Update Division",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Full-Stack Division\",\n  \"description\": \"Full-Stack Development Division\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/divisions/{{divisionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"divisions",
								"{{divisionId}}"
							]
						},
						"description": "Update division (requires ketua_departemen role or higher)"
					}
				},
				{
					"name": "Delete Division",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/divisions/{{divisionId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"divisions",
								"{{divisionId}}"
							]
						},
						"description": "Delete division (requires ketua_departemen role or higher)"
					}
				}
			]
		},
		{
			"name": "Articles",
			"item": [
				{
					"name": "Get All Articles",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles"
							]
						},
						"description": "Get all articles (public access)"
					}
				},
				{
					"name": "Get Article by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Get specific article by ID"
					}
				},
				{
					"name": "Create Article",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Sample Article Title",
									"type": "text"
								},
								{
									"key": "content",
									"value": "This is the content of the article...",
									"type": "text"
								},
								{
									"key": "status",
									"value": "draft",
									"type": "text",
									"description": "draft or published"
								},
								{
									"key": "thumbnail",
									"type": "file",
									"src": []
								},
								{
									"key": "attachment",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/articles",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles"
							]
						},
						"description": "Create new article with file uploads (requires article management permission)"
					}
				},
				{
					"name": "Update Article",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Updated Article Title",
									"type": "text"
								},
								{
									"key": "content",
									"value": "Updated content of the article...",
									"type": "text"
								},
								{
									"key": "status",
									"value": "published",
									"type": "text"
								},
								{
									"key": "thumbnail",
									"type": "file",
									"src": []
								},
								{
									"key": "attachment",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Update article (requires edit permission for specific article)"
					}
				},
				{
					"name": "Delete Article",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/articles/{{articleId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles",
								"{{articleId}}"
							]
						},
						"description": "Delete article (requires edit permission for specific article)"
					}
				},
				{
					"name": "Get Authorized Departments",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/articles/permissions/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles",
								"permissions",
								"departments"
							]
						},
						"description": "Get departments authorized to manage articles"
					}
				},
				{
					"name": "Update Authorized Departments",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"departmentIds\": [1, 2, 3]\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/articles/permissions/departments",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles",
								"permissions",
								"departments"
							]
						},
						"description": "Update authorized departments (requires ketua_umum role)"
					}
				},
				{
					"name": "Check Article Permission",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/articles/permissions/check",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"articles",
								"permissions",
								"check"
							]
						},
						"description": "Check current user's article management permission"
					}
				}
			]
		},
		{
			"name": "Events",
			"item": [
				{
					"name": "Get All Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events"
							]
						},
						"description": "Get all events (public access)"
					}
				},
				{
					"name": "Get Event Details",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Get specific event details by ID"
					}
				},
				{
					"name": "Create Event",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Tech Meetup\",\n  \"description\": \"Monthly tech meetup event\",\n  \"startDate\": \"2025-08-01T10:00:00Z\",\n  \"endDate\": \"2025-08-01T15:00:00Z\",\n  \"location\": \"Conference Room A\",\n  \"maxParticipants\": 50,\n  \"requiresApproval\": true\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/events",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events"
							]
						},
						"description": "Create new event (requires event creation permission)"
					}
				},
				{
					"name": "Update Event",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Updated Tech Meetup\",\n  \"description\": \"Updated monthly tech meetup event\",\n  \"location\": \"Conference Room B\",\n  \"maxParticipants\": 75\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Update event (requires event management permission)"
					}
				},
				{
					"name": "Delete Event",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}"
							]
						},
						"description": "Delete event (requires event management permission)"
					}
				},
				{
					"name": "Export Event Attendances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/events/{{eventId}}/attendances/export",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"events",
								"{{eventId}}",
								"attendances",
								"export"
							]
						},
						"description": "Export event attendances to Excel (requires event management permission)"
					}
				}
			]
		},
		{
			"name": "Attendances",
			"item": [
				{
					"name": "Submit Attendance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "eventId",
									"value": "{{eventId}}",
									"type": "text"
								},
								{
									"key": "notes",
									"value": "Attended the full event",
									"type": "text"
								},
								{
									"key": "proofs",
									"type": "file",
									"src": []
								},
								{
									"key": "proofs",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/api/attendances",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attendances"
							]
						},
						"description": "Submit attendance for an event with proof files (max 3 files)"
					}
				},
				{
					"name": "Validate Attendance",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"approved\",\n  \"validationNotes\": \"Attendance verified and approved\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/attendances/{{attendanceId}}/validate",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attendances",
								"{{attendanceId}}",
								"validate"
							]
						},
						"description": "Validate attendance (approve/reject) - requires attendance validation permission"
					}
				},
				{
					"name": "Get My Attendances",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attendances/my",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attendances",
								"my"
							]
						},
						"description": "Get current user's attendance history"
					}
				},
				{
					"name": "Get Attendance Details",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{accessToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/attendances/{{attendanceId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"attendances",
								"{{attendanceId}}"
							]
						},
						"description": "Get specific attendance details by ID"
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "accessToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "articleId",
			"value": "",
			"type": "string"
		},
		{
			"key": "eventId",
			"value": "",
			"type": "string"
		},
		{
			"key": "attendanceId",
			"value": "",
			"type": "string"
		},
		{
			"key": "departmentId",
			"value": "",
			"type": "string"
		},
		{
			"key": "divisionId",
			"value": "",
			"type": "string"
		},
		{
			"key": "loggedOutToken",
			"value": "",
			"type": "string"
		}
	]
}
