### Test User Authorization System

# Variabel untuk menyimpan token
@baseUrl = http://localhost:5000/api
@adminToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwiZW1haWwiOiJqb2huLmRkb2ZlZWhqQGV4YW1wbGUuY29tIiwicm9sZSI6ImFkbWluIiwiaWF0IjoxNzUzMzYzNTc2LCJleHAiOjE3NTMzNjcxNzZ9.Tq_Nq1Zei3ou5ynGnx9FdxueD38HKQ6T-K6WWbClXF8
@pengurusToken = YOUR_PENGURUS_TOKEN_HERE
@anggotaToken = YOUR_ANGGOTA_TOKEN_HERE

### 1. GET Users - Tanpa Authentication (Public Access)
GET {{baseUrl}}/users
Content-Type: application/json

###
GET http://localhost:5000/api/departments/3
Content-Type: application/json
Authorization: Bearer {{adminToken}}

###
GET http://localhost:5000/api/divisions/1
Content-Type: application/json
Authorization: Bearer {{adminToken}}

###
GET http://localhost:5000/api/articles
Content-Type: application/json
Authorization: Bearer {{adminToken}}

###
POST http://localhost:5000/api/articles
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "title": "Test Article",
  "content": "This is a test article for authorization testing.",
  "status": "draft",             
  "authorId": 1     
}

### 2. GET Users - Dengan Authentication sebagai Admin (Bisa lihat level lebih rendah)
GET {{baseUrl}}/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

### 3. GET Users - Dengan Authentication sebagai Pengurus (Hanya bisa lihat anggota)
GET {{baseUrl}}/users
Authorization: Bearer {{pengurusToken}}
Content-Type: application/json

### 4. CREATE User - Sebagai Admin (Success - buat bendahara)
POST {{baseUrl}}/users
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Test Divisi",
  "email": "divisi.test@example.com",
  "password": "Password123!",
  "role": "ketua_divisi"
}

### 5. CREATE User - Sebagai Pengurus (Success - buat anggota)
POST {{baseUrl}}/users
Authorization: Bearer {{pengurusToken}}
Content-Type: application/json

{
  "name": "Test Anggota",
  "email": "anggota.test@example.com",
  "password": "Password123!", 
  "role": "anggota",
  "departmentId": 1,
  "divisionId": 1
}

### 6. CREATE User - Sebagai Pengurus (Forbidden - coba buat admin)
POST {{baseUrl}}/users
Authorization: Bearer {{pengurusToken}}
Content-Type: application/json

{
  "name": "Test Admin",
  "email": "admin.test@example.com",
  "password": "Password123!",
  "role": "admin",
  "departmentId": 1,
  "divisionId": 1
}

### 7. CREATE User - Tanpa Authentication (Unauthorized)
POST {{baseUrl}}/users
Content-Type: application/json

{
  "name": "Test User",
  "email": "test@example.com",
  "password": "Password123!",
  "role": "anggota"
}

### 8. CREATE User - Sebagai Anggota (Forbidden - di bawah minimum role)
POST {{baseUrl}}/users
Authorization: Bearer {{anggotaToken}}
Content-Type: application/json

{
  "name": "Test User",
  "email": "test@example.com",
  "password": "Password123!",
  "role": "anggota"
}

### 9. UPDATE User - Sebagai Admin (Success - edit pengurus)
PUT {{baseUrl}}/users/USER_ID_HERE
Authorization: Bearer {{adminToken}}
Content-Type: application/json

{
  "name": "Updated Pengurus Name"
}

### 10. UPDATE User - Sebagai Pengurus (Forbidden - coba edit admin)
PUT {{baseUrl}}/users/ADMIN_USER_ID_HERE
Authorization: Bearer {{pengurusToken}}
Content-Type: application/json

{
  "name": "Updated Admin Name"
}

### 11. UPDATE User - Tanpa Authentication (Unauthorized)
PUT {{baseUrl}}/users/USER_ID_HERE
Content-Type: application/json

{
  "name": "Updated Name"
}

### 12. DELETE User - Sebagai Admin (Success - hapus pengurus)
DELETE {{baseUrl}}/users/USER_ID_HERE
Authorization: Bearer {{adminToken}}

### 13. DELETE User - Sebagai Pengurus (Forbidden - coba hapus admin)
DELETE {{baseUrl}}/users/ADMIN_USER_ID_HERE
Authorization: Bearer {{pengurusToken}}

### 14. DELETE User - Tanpa Authentication (Unauthorized)
DELETE {{baseUrl}}/users/USER_ID_HERE

### 15. GET User by ID - Public Access
GET {{baseUrl}}/users/USER_ID_HERE
Content-Type: application/json

###
POST http://localhost:5000/api/departments
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "name": "Human"
}


Content-Type: application/json

###
POST http://localhost:5000/api/divisions
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "name": "Humasdan",
  "departmentId": 3
}


###
PUT http://localhost:5000/api/users/4
Content-Type: application/json
Authorization: Bearer {{adminToken}}

{
  "departmentId": 1
}

### Expected Results:
# 1-3: Success dengan data yang sesuai hirarki
# 4-5: Success (201 Created)
# 6: Forbidden (403)
# 7: Unauthorized (401) 
# 8: Forbidden (403)
# 9: Success (200)
# 10: Forbidden (403)
# 11: Unauthorized (401)
# 12: Success (200)
# 13: Forbidden (403)
# 14: Unauthorized (401)
# 15: Success (200)
